    console.log("Token address:", dai.address);
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => web3.utils.toWei(web3.utils.toBN(number), 'ether');
const web3 = require("web3");
const { ethers } = require("hardhat");
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
    const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
ethers.getSigners()
const web3 = require("web3");
const { ethers } = require("hardhat");
web3.utils.toWei
const toWei = (number) => web3.utils.toWei(web3.utils.toBN(number), 'ether');
const web3 = require("web3");
const ethers = require("hardhat");
ethers
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => web3.utils.toWei(web3.utils.toBN(number), 'ether');
const web3 = require("web3");
const ethers = require("hardhat");
web333.utils
const web333 = require("web3")
const web3 = require("@nomiclabs/hardhat-web3");
const ethers = require("hardhat")
const web3 = require("@nomiclabs/hardhat-web3")
web3
const { web3 } = require("@nomiclabs/hardhat-web3");
const { ethers } = require("hardhat");
web3
const { web3 } = require("@nomiclabs/hardhat-web3");
const { ethers } = require("hardhat");
npm install --save-dev @nomiclabs/hardhat-web3 web3
    console.log("Token address:", dai.address);
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
    const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => web3.utils.toWei(web3.utils.toBN(number), 'ether');
const { web3 } = require("@nomiclabs/hardhat-web3");
const { ethers } = require("hardhat");
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
    const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => web3.utils.toWei(web3.utils.toBN(number), 'ether');
const { web3 } = require("web3");
const { ethers } = require("hardhat");
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => web3.utils.toWei(web3.utils.toBN(number), 'ether');
const { web3 } = require("web3");
const { ethers } = require("hardhat");
    console.log("Token address:", dai.address);
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => web3.utils.toWei(web3.utils.toBN(number), 'ether');
const { web3 } = require("web3");
const { ethers } = require("hardhat");
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => web3.utils.toWei(web3.utils.toBN(number), 'ether');
const { ethers } = require("hardhat");
    console.log("Token address:", dai.address);
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => Web3.utils.toWei(web3.utils.toBN(number), 'ether');
const { Web3 } = require("web3");
const { ethers } = require("hardhat");
    console.log("Token address:", comp.address);
    const comp = await Comp.deploy("Comp", "COMP", toWei(10**4));
    const Comp = await ethers.getContractFactory("Comp");
    console.log("Token address:", link.address);
    const link = await Link.deploy("Chainlink", "LINK", toWei(10**6));
    const Link = await ethers.getContractFactory("Link");
    console.log("Token address:", dai.address);
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => Web3.utils.toWei(web3.utils.toBN(number), 'ether');
const { default: Web3 } = require("web3");
const { ethers } = require("hardhat");
    console.log("Token address:", comp.address);
    const comp = await Comp.deploy("Comp", "COMP", toWei(10**4));
    const Comp = await ethers.getContractFactory("Comp");
    console.log("Token address:", link.address);
    const link = await Link.deploy("Chainlink", "LINK", toWei(10**6));
    const Link = await ethers.getContractFactory("Link");
    console.log("Token address:", dai.address);
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const toWei = (number) => Web3.utils.toWei(web3.utils.toBN(number), 'ether');
    const dai = await Dai.deploy("Dai", "DAI", toWei(10**10));
const Dai = await ethers.getContractFactory("Dai");
    console.log("Account balance:", (await deployer.getBalance()).toString());
    console.log("Deploying contracts with the account:", deployer.address);
    console.log(deployer)
const [deployer] = await ethers.getSigners();
const hre = require("hardhat")
await contract3.supportedTokenAddr('0x5FbDB2315678afecb367f032d93F642f64180aaa')
await contract3.supportedTokenAddr('0x5FbDB2315678afecb367f032d93F642f64180aa3')
await contract3.supportedTokenAddr()
await contract3.supportedTokenAddr
contract3 = await Contract2.deploy(['0x5FbDB2315678afecb367f032d93F642f64180aa3'])
const contract2 = await Contract2.deploy()
const Contract2 = await hre.ethers.getContractFactory("Dex")
await contract.address
await contract.totalSupply()
contract = await Contract.deploy("Hoge", "HGE", 10000)
const Contract = await hre.ethers.getContractFactory("MyToken")
const hre = require("hardhat")
contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken", "MTK", 10000)
const hre = require("hardhat")
contract.supportedTokenAddr()
contract = await Contract2.deploy(['0x5FbDB2315678afecb367f032d93F642f64180aa3'])
contract = await Contract2.deploy()
const Contract2 = await hre.ethers.getContractFactory("Dex")
const Contract = await hre.ethers.getContractFactory("Dex")
await contract.balanceOf('0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266')
await contract.totalSupply()
await contract.owner
await contract.address
const contract = await Contract.deploy("hoge", "HGE", 2000)
const Contract = await hre.ethers.getContractFactory("MyToken")
const hre = require("hardhat")
const contract = await Contract.deploy("hoge", "HGE", 2000)
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
const hre = require("hardhat")
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
const hre = require("hardhat")
await contract.balanceOf('0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266')
await contract.totalSupply()
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
const hre = require("hardhat")
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
const hre = require("hardhat")
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
hre.ethers
const hre = require("hardhat")
await contract.totalSupply()
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
await hre.ethers.getContractFactory("MyContract")
hre.ethers
const hre = require("hardhat")
const hre = requrie("hardhat")
const hre = require("hardhat")
const hre = requrie("hardhat")
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
hre.ethers
const hre = require("hardhat")
await contract._msgSender()
await contract.balanceOf('0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266')
await contract.totalSupply()
await contract.totalSupply
await contract.deployed()
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
hre.ethers
const hre = require("hardhat")
await contract.balanceOf('0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266');
await contract.balanceOf(0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266);
awaot contract.balanceOf(0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266);
await contract.totalSupply()
awaot contract.totalSupply()
await contract.address
await contract.deployed()
awaot contract.totalSupply()
await contract.deployed()
awaot contract.totalSupply()
awaot contract.totalSupply
clear
awaot contract.balanceOf(0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266);
awaot contract.balanceOf(0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266)
awaot contract.balanceOf('0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266')
contract.balanceOf('0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266')
contract.balanceOf(0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266)
contract.address
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
hre.ethers
const hre = require("hardhat")
await contract.balanceOf('0x70997970C51812dc3A010C7d01b50e0d17dc79C8')
await contract.balanceOf(0x70997970C51812dc3A010C7d01b50e0d17dc79C8)
await contract.totalSupply()
await contract.symbol()
await contract.name()
contract.name()
await contract.owner()
awit contract.owner()
contract.owner()
contract.owner
contract.address
await contract.deployed()
const contract = await Contract.deploy()
const Contract = await hre.ethers.getContractFactory("MyToken")
hre.ethers
const hre = require("hardhat")
await contract.deployed()
await contract.address
contract
await contract.deployed()
await contract.deployed
const contract = await Contract.deploy()
const contract = await Contract.deploy
const Contract = await hre.ethers.getContractFactory("MyToken")
hre.ethers
const hre = require("hardhat")